<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCORXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAABJADAAIAAAAUAAAAXJAEAAIAAAAUAAAAcJKRAAIAAAADMDAAAJKSAAIAAAADMDAAAAAA
        AAAyMDE5OjA0OjI2IDEzOjU2OjI0ADIwMTk6MDQ6MjYgMTM6NTY6MjQAAAD/2wBDAAYEBQYFBAYGBQYH
        BwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcH
        BwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCj/wAARCABkASwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6pooooAKKy9d12x0S
        DzL2XDH7sa8s30FcDqPxIvJGI0+0ihTs0pLsf5AfrWU60IfEzuwuW4jFK9OOnfZHqVFeL/8ACc69vz9q
        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
        iigD/9k=
</value>
  </data>
</root>